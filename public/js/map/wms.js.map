{"version":3,"sources":["wms.js"],"names":[],"mappingsfile":"wms.js","sourcesContent":["/*\r\n    Document   : wms.js\r\n    Created on : Feb 16, 2011, 3:25:27 PM\r\n    Author     : \"Gavin Jackson <Gavin.Jackson@csiro.au>\"\r\n\r\n    Refactored code from http://lyceum.massgis.state.ma.us/wiki/doku.php?id=googlemapsv3:home\r\n*/\r\n\r\nfunction bound(value, opt_min, opt_max) {\r\n    if (opt_min != null) value = Math.max(value, opt_min);\r\n    if (opt_max != null) value = Math.min(value, opt_max);\r\n    return value;\r\n}\r\n\r\nfunction degreesToRadians(deg) {\r\n    return deg * (Math.PI / 180);\r\n}\r\n\r\nfunction radiansToDegrees(rad) {\r\n    return rad / (Math.PI / 180);\r\n}\r\n\r\nfunction MercatorProjection() {\r\n    var MERCATOR_RANGE = 256;\r\n    this.pixelOrigin_ = new google.maps.Point(\r\n        MERCATOR_RANGE / 2, MERCATOR_RANGE / 2);\r\n    this.pixelsPerLonDegree_ = MERCATOR_RANGE / 360;\r\n    this.pixelsPerLonRadian_ = MERCATOR_RANGE / (2 * Math.PI);\r\n};\r\n\r\nMercatorProjection.prototype.fromLatLngToPoint = function(latLng, opt_point) {\r\n    var me = this;\r\n\r\n    var point = opt_point || new google.maps.Point(0, 0);\r\n\r\n    var origin = me.pixelOrigin_;\r\n    point.x = origin.x + latLng.lng() * me.pixelsPerLonDegree_;\r\n    // NOTE(appleton): Truncating to 0.9999 effectively limits latitude to\r\n    // 89.189.  This is about a third of a tile past the edge of the world tile.\r\n    var siny = bound(Math.sin(degreesToRadians(latLng.lat())), -0.9999, 0.9999);\r\n    point.y = origin.y + 0.5 * Math.log((1 + siny) / (1 - siny)) * -me.pixelsPerLonRadian_;\r\n    return point;\r\n};\r\n\r\nMercatorProjection.prototype.fromDivPixelToLatLng = function(pixel, zoom) {\r\n    var me = this;\r\n\r\n    var origin = me.pixelOrigin_;\r\n    var scale = Math.pow(2, zoom);\r\n    var lng = (pixel.x / scale - origin.x) / me.pixelsPerLonDegree_;\r\n    var latRadians = (pixel.y / scale - origin.y) / -me.pixelsPerLonRadian_;\r\n    var lat = radiansToDegrees(2 * Math.atan(Math.exp(latRadians)) - Math.PI / 2);\r\n    return new google.maps.LatLng(lat, lng);\r\n};\r\n\r\nMercatorProjection.prototype.fromDivPixelToSphericalMercator = function(pixel, zoom) {\r\n    var me = this;\r\n    var coord = me.fromDivPixelToLatLng(pixel, zoom);\r\n\r\n    var r= 6378137.0;\r\n    var x = r* degreesToRadians(coord.lng());\r\n    var latRad = degreesToRadians(coord.lat());\r\n    var y = (r/2) * Math.log((1+Math.sin(latRad))/ (1-Math.sin(latRad)));\r\n\r\n    return new google.maps.Point(x,y);\r\n};\r\n\r\nfunction loadWMS(map, baseURL, customParams){\r\n    var tileHeight = 256;\r\n    var tileWidth = 256;\r\n    var opacityLevel = 0.75;\r\n    var isPng = true;\r\n    var minZoomLevel = 2;\r\n    var maxZoomLevel = 28;\r\n\r\n    //var baseURL = \"\";\r\n    var wmsParams = [\r\n    \"REQUEST=GetMap\",\r\n    \"SERVICE=WMS\",\r\n    \"VERSION=1.1.1\",\r\n    \"BGCOLOR=0xFFFFFF\",\r\n    \"TRANSPARENT=TRUE\",\r\n    \"SRS=EPSG:900913\", // 3395?\r\n    \"WIDTH=\"+ tileWidth,\r\n    \"HEIGHT=\"+ tileHeight\r\n    ];\r\n\r\n    //add additional parameters\r\n    var wmsParams = wmsParams.concat(customParams);\r\n\r\n    var overlayOptions =\r\n    {\r\n        getTileUrl: function(coord, zoom)\r\n        {\r\n            var lULP = new google.maps.Point(coord.x*256,(coord.y+1)*256);\r\n            var lLRP = new google.maps.Point((coord.x+1)*256,coord.y*256);\r\n\r\n            var projectionMap = new MercatorProjection();\r\n\r\n            var lULg = projectionMap.fromDivPixelToSphericalMercator(lULP, zoom);\r\n            var lLRg  = projectionMap.fromDivPixelToSphericalMercator(lLRP, zoom);\r\n\r\n            var lUL_Latitude = lULg.y;\r\n            var lUL_Longitude = lULg.x;\r\n            var lLR_Latitude = lLRg.y;\r\n            var lLR_Longitude = lLRg.x;\r\n            //GJ: there is a bug when crossing the -180 longitude border (tile does not render) - this check seems to fix it\r\n            if (lLR_Longitude < lUL_Longitude){\r\n              lLR_Longitude = Math.abs(lLR_Longitude);\r\n            }\r\n            var urlResult = baseURL + wmsParams.join(\"&\") + \"&bbox=\" + lUL_Longitude + \",\" + lUL_Latitude + \",\" + lLR_Longitude + \",\" + lLR_Latitude;\r\n\r\n            return urlResult;\r\n        },\r\n\r\n        tileSize: new google.maps.Size(tileHeight, tileWidth),\r\n\r\n        minZoom: minZoomLevel,\r\n        maxZoom: maxZoomLevel,\r\n\r\n        opacity: opacityLevel,\r\n\r\n        isPng: isPng\r\n    };\r\n\r\n    overlayWMS = new google.maps.ImageMapType(overlayOptions);\r\n\r\n    map.overlayMapTypes.insertAt(0, overlayWMS);\r\n\r\n    map.setOptions({\r\n        mapTypeControlOptions: {\r\n            mapTypeIds: [\r\n            google.maps.MapTypeId.ROADMAP,\r\n            google.maps.MapTypeId.TERRAIN,\r\n            google.maps.MapTypeId.SATELLITE,\r\n            google.maps.MapTypeId.HYBRID\r\n            ],\r\n            style: google.maps.MapTypeControlStyle.DROPDOWN_MENU\r\n        }\r\n    });\r\n}\r\n"]}