{"version":3,"sources":["searchplaces.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"searchplaces.js","sourcesContent":["function initAutocomplete(map) {\r\n  var centerControlDiv = document.createElement('div');\r\n  var centerControl = new SearchControl(centerControlDiv, map);\r\n  centerControlDiv.index = 1;\r\n  centerControlDiv.style['padding-top'] = '10px';\r\n  map.controls[google.maps.ControlPosition.TOP_LEFT].push(centerControlDiv);\r\n}\r\n\r\nfunction SearchControl(controlDiv,map) {\r\n  var control = this;\r\n\r\n  controlDiv.style.clear = 'both';\r\n  var goSearchUI = document.createElement('div');\r\n  goSearchUI.id = 'goSearchUI';\r\n  goSearchUI.title = 'Search the map';\r\n  controlDiv.appendChild(goSearchUI);\r\n\r\n  var input = document.createElement('input');\r\n  input.id = 'pac-input';\r\n  input.class = 'controls form-control';\r\n  input.type = 'text';\r\n  input.placeholder = 'Search Box';\r\n  input.style['background-color'] = '#fff';\r\n  input.style['font-family'] = 'Roboto';\r\n  input.style['font-size'] = '15px';\r\n  input.style['font-weight'] = '300';\r\n  input.style['margin-left'] = '12px';\r\n  input.style['text-overflow'] = 'ellipsis';\r\n  input.style['padding'] = '0 11px 0 13px';\r\n  //input.style['width'] = '400px';\r\n\r\n\r\n  goSearchUI.appendChild(input);\r\n  var searchBox = new google.maps.places.SearchBox(input);\r\n\r\n  map.addListener('bounds_changed', function() {\r\n      searchBox.setBounds(map.getBounds());\r\n  });\r\n  var markersSearch = [];\r\n  var infowindow = new google.maps.InfoWindow();\r\n  var marker; \r\n  \r\n  searchBox.addListener('places_changed', function() {\r\n      var places = searchBox.getPlaces();\r\n      if (places.length == 0) {\r\n        return;\r\n      }\r\n      markersSearch.forEach(function(marker) {\r\n        marker.setMap(null);\r\n      });\r\n      markersSearch = [];\r\n      var bounds = new google.maps.LatLngBounds();\r\n      places.forEach(function(place) {\r\n            if (!place.geometry) {\r\n              console.log(\"Returned place contains no geometry\");\r\n              return;\r\n            }\r\n            var icon = {\r\n              url: place.icon,\r\n              size: new google.maps.Size(71, 71),\r\n              origin: new google.maps.Point(0, 0),\r\n              anchor: new google.maps.Point(17, 34),\r\n              scaledSize: new google.maps.Size(25, 25)\r\n            };\r\n\r\n            // Create a marker for each place.\r\n            marker = new google.maps.Marker({\r\n              map: map,\r\n              icon: icon,\r\n              title: place.name,\r\n              position: place.geometry.location\r\n            });\r\n            markersSearch.push(marker);\r\n\r\n            google.maps.event.addListener(marker, 'click', function() {\r\n              infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +\r\n                'Place ID: ' + place.place_id + '<br>' +\r\n                place.formatted_address + '</div>');\r\n              infowindow.open(map, this);\r\n            });\r\n\r\n            if (place.geometry.viewport) {\r\n              // Only geocodes have viewport.\r\n              bounds.union(place.geometry.viewport);\r\n            } else {\r\n              bounds.extend(place.geometry.location);\r\n            }\r\n      });\r\n      map.fitBounds(bounds);\r\n  });\r\n\r\n}\r\n"]}